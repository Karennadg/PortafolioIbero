{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentaci\u00f3n del Proyecto Introducci\u00f3n a la mec\u00e1tronica","text":""},{"location":"#nuestro-portafolio-de-actividades","title":"Nuestro Portafolio de Actividades","text":"<p>Introducci\u00f3n a la mec\u00e1tronica Departamento de Ciencias e Ingenier\u00edas | Universidad Iberoamericana Puebla, M\u00e9xico.</p> <p></p> <p>Karen Itzel Najera De Gante</p> <p>Ingenier\u00eda mec\u00e1tronica | karen.najera@iberopuebla.mx</p> <p>Resumen: Soy estudiante de d\u00e9cimo semestre de Ingenier\u00eda Mecatr\u00f3nica, con formaci\u00f3n previa en Ingenier\u00eda Mec\u00e1nica. Mi pasi\u00f3n por los desaf\u00edos y la innovaci\u00f3n me llev\u00f3 a continuar mis estudios en una segunda carrera, con el objetivo de ampliar mis conocimientos y abrir mayores oportunidades en el campo laboral. Durante seis meses trabaj\u00e9 como analista en EDAG Test Lab M\u00e9xico, donde adquir\u00ed experiencia en pruebas y validaciones dentro del sector automotriz. Actualmente, sigo desarrollando mis habilidades en \u00e1reas multidisciplinarias, combinando mec\u00e1nica, electr\u00f3nica y automatizaci\u00f3n para enfrentar retos tecnol\u00f3gicos con una visi\u00f3n integral.</p> <p></p> <p>Tom\u00e1s Toledo Fern\u00e1ndez</p> <p>Ingenier\u00eda mec\u00e1tronica | 202945@iberopuebla.mx</p> <p>Resumen: Soy estudiante de primer semestre de Mecatronica,con estudios previos en el area de f\u00edsicos matem\u00e1ticos.Me inspira la evoluci\u00f3n y la autosuperacion, lo que me permite todos los dias dar lo mejor de mi para llegar a ser una persona que aporte algo a la humanidad.He estudiado en la universidad la salle oaxaca seccion bachillerato donde obtuve demasiodos conocimentos que me han permitido tener conocimiento escencial para mi carrera.Mi meta es concluir mis estudios en la universidad ,buscar una maestria y ser una persona de cambio.</p>"},{"location":"#_1","title":"Documentaci\u00f3n del Proyecto Introducci\u00f3n a la mec\u00e1tronica","text":""},{"location":"PRACTICA1/","title":"\ud83d\udcda Pr\u00e1ctica 1: Temporizador Astable con 555","text":""},{"location":"PRACTICA1/#1-resumen","title":"1) Resumen","text":"<ul> <li>Equipo / Autor(es): Nombre(s) </li> <li>Curso / Asignatura: Introducci\u00f3n a la mecatronica </li> <li>Fecha: 05/09/2025 </li> <li>Descripci\u00f3n breve: En esta pr\u00e1ctica se dise\u00f1\u00f3 e implement\u00f3 un circuito temporizador en modo astable utilizando el circuito integrado 555. Se calcularon los tiempos de salida en estado alto y bajo, as\u00ed como la frecuencia del tren de pulsos generado. Adem\u00e1s, se analizaron las f\u00f3rmulas que rigen su comportamiento y se utiliz\u00f3 un simulador para validar los resultados obtenidos.</li> </ul>"},{"location":"PRACTICA1/#2-objetivos","title":"2) Objetivos","text":"<ul> <li>General: Comprender el funcionamiento del temporizador 555 en modo astable y c\u00f3mo configurar sus tiempos de salida mediante resistencias y capacitores.</li> <li>Espec\u00edficos:</li> <li>Identificar los pines del circuito integrado 555 y su funci\u00f3n en modo astable.</li> <li>Configurar el circuito en un simulador y comprobar el comportamiento de la se\u00f1al generada.</li> <li>Interpretar el diagrama de se\u00f1al de salida en un ciclo completo.</li> </ul>"},{"location":"PRACTICA1/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<p>Incluye: -  C\u00e1lculo de los tiempos de salida (alto y bajo) en funci\u00f3n de R1, R2 y C1.</p> <ul> <li> <p>An\u00e1lisis del comportamiento de un circuito 555 en modo astable.</p> </li> <li> <p>Uso de simulador para observar la se\u00f1al de salida..</p> </li> </ul> <p>No incluye: - Implementaci\u00f3n en protoboard o hardware real. - Programaci\u00f3n de microcontroladores.. - Control de dispositivos externos con la se\u00f1al de salida.</p>"},{"location":"PRACTICA1/#4-resultados","title":"4) Resultados","text":"<p>Durante la realizaci\u00f3n de la pr\u00e1ctica, se dise\u00f1\u00f3 un circuito astable utilizando el temporizador 555 con los siguientes componentes: dos resistencias de 200 k\u03a9 (R1 y R2) y un capacitor de 22 \u00b5F (C1). Estos valores fueron ingresados en un simulador, el cual permiti\u00f3 visualizar tanto la se\u00f1al de salida como los c\u00e1lculos correspondientes al comportamiento temporal del circuito. El simulador arroj\u00f3 un tiempo alto (T\u2081) de aproximadamente 6.0984 segundos, y un tiempo bajo (T\u2082) de 3.0492 segundos, lo que indica que la se\u00f1al permanece m\u00e1s tiempo en estado alto que en estado bajo. La frecuencia del ciclo completo result\u00f3 ser 0.1091 Hz, lo cual representa una se\u00f1al de baja frecuencia, adecuada para aplicaciones donde no se requieren cambios r\u00e1pidos de estado, como en sistemas de parpadeo o temporizadores de larga duraci\u00f3n.</p> <p></p> <p>Al final logramos ver el parpadeo de un led con los valores mostrados, en un circuito armado</p> <p>Video armado</p>"},{"location":"PRACTICA1/#5-conclusiones","title":"5) conclusiones","text":"<p>En conclusi\u00f3n, se comprendi\u00f3 satisfactoriamente el funcionamiento del temporizador 555 en modo astable. Se demostr\u00f3 que es posible controlar el ciclo de trabajo y la frecuencia de la se\u00f1al de salida mediante la elecci\u00f3n adecuada de los valores de R1, R2 y C1. Adem\u00e1s, el uso del simulador permiti\u00f3 validar los c\u00e1lculos te\u00f3ricos, visualizar la forma de onda generada y entender la importancia de cada componente en el circuito.</p> <p>```</p>"},{"location":"PRACTICA2/","title":"\ud83d\udcda Pr\u00e1ctica 2: SP32 (ESP32-S3 Dev)","text":""},{"location":"PRACTICA2/#1-resumen","title":"1) Resumen","text":"<ul> <li>Equipo / Autor(es): Tom\u00e1s Toledo y Karen Itzel </li> <li>Curso / Asignatura: Introducci\u00f3n a la mecatronica </li> <li>Fecha: 16/09/2025 </li> <li>Descripci\u00f3n breve: En esta pr\u00e1ctica se dise\u00f1aron e implementaron 3 circuitos con arduino diferentes con diferentes resultados pero con el mismo arduino</li> </ul>"},{"location":"PRACTICA2/#2-objetivos","title":"2) Objetivos","text":"<ul> <li>General: _Comprender algunas de las posibles y mas b\u00e1sicas utilidades del arduino y el como programarlo . Espec\u00edficos: Identificar los c\u00f3digos mas b\u00e1sicos con los que trabaja el arduino. Configurar el arduino y ver como funciona el c\u00f3digo programado.</li> </ul>"},{"location":"PRACTICA2/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<p>Incluye:</p> <p>-Uso de se\u00f1ales bluetooth.</p> <p>-An\u00e1lisis del comportamiento de un ciclo generado por el arduino.</p> <p>-Componentes f\u00edsicos para complementar la practica.</p> <p>No incluye:</p> <p>-Utilizaci\u00f3n del wifi del arduino.</p> <p>-Prueas digitales del funcionamiento.</p>"},{"location":"PRACTICA2/#4-resultados","title":"4) Resultados","text":"<p>Durante la realizaci\u00f3n de la pr\u00e1ctica, se programo un arduino 3 veces con una funci\u00f3n diferente cada vez,en la primera que mandara un parpadeo de un segundo a un led lo cual funciono a la perfecci\u00f3n,en la segunda buscamos que el led se encendiera cada vez que presionabamos un bot\u00f3n y salio exelente , el led se encend\u00ed cada vez que presionjabamos el bot\u00f3n y para terminar hicimos que el led se encendiera cada vez que nos llegara el mensaje on y haciamos que se apagara cuando el arduino recibia el mensaje off. </p> <p></p> <p></p> <p>Al final logramos ver el parpadeo de un led,el encendido y apagado de un led con un bot\u00f3n y el encendido y apagado de un led via bluetooth Video armado</p> <p>Video armado</p> <p>Video armado</p>"},{"location":"PRACTICA2/#5-conclusiones","title":"5) conclusiones","text":"<p>En conclusi\u00f3n, se comprendi\u00f3 satisfactoriamente la manera de programar a un arduino para que nos ayude con diferentes tareas y el como nos puede facilitar ciertos trabajos gracias a todas sus posibles funciones.</p>"},{"location":"PRACTICA3/","title":"\ud83d\udcda Pr\u00e1ctica 3: Control de velocidad de motor DC con ESP32","text":""},{"location":"PRACTICA3/#1-resumen","title":"1) Resumen","text":"<ul> <li>Equipo / Autor(es): Tom\u00e1s Toledo y Karen Itzel </li> <li>Curso / Asignatura: Introducci\u00f3n a la mecatronica </li> <li>Fecha: 19/09/2025 </li> <li>Descripci\u00f3n breve: En esta pr\u00e1ctica se desarroll\u00f3 un programa en el ESP32 para controlar la velocidad de un motor de corriente directa (DC) utilizando modulaci\u00f3n por ancho de pulso (PWM). Se configuraron los pines de salida digital y el canal PWM del microcontrolador para variar gradualmente la velocidad del motor en ambas direcciones de giro.</li> </ul>"},{"location":"PRACTICA3/#2-objetivos","title":"2) Objetivos","text":"<ul> <li>General: _Comprender el control de velocidad de un motor DC mediante se\u00f1ales PWM generadas por el ESP32. Espec\u00edficos: Configurar los pines de salida del ESP32 para controlar la direcci\u00f3n de giro de un motor. Observar el cambio de velocidad en ambas direcciones del giro del motor.</li> </ul>"},{"location":"PRACTICA3/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<p>Incluye:</p> <p>-Programaci\u00f3n en Arduino IDE utilizando el ESP32.</p> <p>-Control de un motor DC mediante salidas digitales y PWM.</p> <p>-Variaci\u00f3n progresiva de la velocidad del motor en ambas direcciones.</p> <p>No incluye:</p> <p>-Control PID o sistemas de regulaci\u00f3n autom\u00e1tica.</p> <p>-Integraci\u00f3n con m\u00f3dulos de comunicaci\u00f3n.</p>"},{"location":"PRACTICA3/#4-codigo","title":"4) Codigo","text":"<pre><code>#define in1 32\n#define in2 33\n#define pwm 25\n\nvoid setup() {\n  pinMode(in1, OUTPUT);\n  pinMode(in2, OUTPUT);\n  ledcAttachChannel(pwm, 1000, 8, 0); // Configuraci\u00f3n del canal PWM\n}\n\nvoid loop() {\n\n  for (int vel = 0; vel &lt; 256; vel++) {\n    ledcWrite(pwm, vel);\n    digitalWrite(in1, 1);\n    digitalWrite(in2, 0);\n    delay(10);\n  }\n\n\n  for (int vel = 256; vel &gt; 0; vel--) {\n    ledcWrite(pwm, vel);\n    digitalWrite(in1, 1);\n    digitalWrite(in2, 0);\n    delay(10);\n  }\n}\n</code></pre>"},{"location":"PRACTICA3/#4-resultados","title":"4) Resultados","text":"<p>El motor incrementa gradualmente su velocidad desde 0 hasta el valor m\u00e1ximo (255) y luego disminuye hasta detenerse. El sentido de giro se mantiene constante, controlado por las se\u00f1ales digitales de los pines in1 y in2.</p> <p>Al final logramos ver el comportamiento controlado del motor</p> <p>Video armado</p>"},{"location":"PRACTICA3/#5-conclusiones","title":"5) conclusiones","text":"<p>Se logr\u00f3 comprender el uso del PWM en el ESP32 para el control de velocidad de un motor DC. El programa permiti\u00f3 visualizar c\u00f3mo la variaci\u00f3n del ciclo de trabajo modifica la potencia entregada al motor, cambiando as\u00ed su velocidad. Esta pr\u00e1ctica constituye la base para el control m\u00e1s avanzado de motores, incluyendo inversi\u00f3n de giro, control de torque y sistemas autom\u00e1ticos</p>"},{"location":"PROYECTO/","title":"\ud83d\udcda Proyecto integrador: Control de veh\u00edculo robotizado mediante Bluetooth y ESP32","text":""},{"location":"PROYECTO/#1-resumen","title":"1) Resumen","text":"<ul> <li>Equipo / Autor(es): Tom\u00e1s Toledo y Karen Itzel </li> <li>Curso / Asignatura: Introducci\u00f3n a la mecatronica </li> <li>Fecha: 18/10/2025 </li> <li>Descripci\u00f3n breve: En esta pr\u00e1ctica se desarroll\u00f3 un sistema de control para un veh\u00edculo robotizado utilizando un microcontrolador ESP32 con comunicaci\u00f3n Bluetooth. El proyecto permite controlar la direcci\u00f3n y el movimiento del robot a trav\u00e9s de comandos enviados desde una aplicaci\u00f3n m\u00f3vil. El sistema integra el control de un servo para el giro del eje delantero y dos motores DC para las llantas traseras, posibilitando movimientos hacia adelante, atr\u00e1s, izquierda, derecha y alto total.</li> </ul>"},{"location":"PROYECTO/#2-objetivos","title":"2) Objetivos","text":"<ul> <li>General: _Dise\u00f1ar e implementar un sistema de control inal\u00e1mbrico por Bluetooth utilizando el ESP32 para manejar la direcci\u00f3n y el desplazamiento de un veh\u00edculo robotizado. Espec\u00edficos: Configurar la comunicaci\u00f3n Bluetooth entre el ESP32 y un dispositivo m\u00f3vil. Implementar el control de los motores DC para los diferentes movimientos del veh\u00edculo.</li> </ul>"},{"location":"PROYECTO/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<p>Incluye:</p> <p>-Programaci\u00f3n en Arduino IDE utilizando el ESP32.</p> <p>-Control de un servo y dos motores DC conectados al ESP32.</p> <p>-Control direccional b\u00e1sico: avance, retroceso, giro y detenci\u00f3n.</p> <p>No incluye:</p> <p>-Sensores de distancia o sistemas de detecci\u00f3n de obst\u00e1culos.</p>"},{"location":"PROYECTO/#-comunicacion-wi-fi-o-control-por-internet","title":"-Comunicaci\u00f3n Wi-Fi o control por Internet.","text":""},{"location":"PROYECTO/#4-codigo","title":"4) Codigo","text":"<pre><code>#include \"BluetoothSerial.h\"\nBluetoothSerial SerialBT;\n\n#define SERVO_PIN 32  // Pin del servo\n#define pwm 26        // Pin del control de velocidad\n// Controladores del motor de llanta izquierda\n#define in1 33\n#define in2 25\n// Controladores del motor de llanta derecha\n#define in3 27\n#define in4 14\n\nint angulo = 90; // Posici\u00f3n inicial\n\nvoid setup() {\n  Serial.begin(115200);\n  SerialBT.begin(\"Pancracio2\");  // Nombre Bluetooth visible en la app\n  Serial.println(\"Esperando conexi\u00f3n Bluetooth...\");\n\n  // PWM del ESP32 para controlar el servo\n  ledcAttach(SERVO_PIN, 50, 8);  // Pin, frecuencia 50Hz, resoluci\u00f3n 8 bits\n\n  // Salidas de los motores\n  pinMode(in1, OUTPUT);\n  pinMode(in2, OUTPUT);\n  pinMode(in3, OUTPUT);\n  pinMode(in4, OUTPUT);\n\n  moverServo(angulo);  // Centra el servo al iniciar\n}\n\nvoid loop() {\n  if (SerialBT.available()) {\n    int msj = SerialBT.read();\n    Serial.println(msj);\n\n    if (msj &gt;= 0 &amp;&amp; msj &lt;= 180) {\n      moverServo(msj);\n\n    } else if (msj == 182) { // Adelante\n      digitalWrite(in1, 1); digitalWrite(in2, 0);\n      digitalWrite(in3, 1); digitalWrite(in4, 0);\n\n    } else if (msj == 183) { // Atr\u00e1s\n      digitalWrite(in1, 0); digitalWrite(in2, 1);\n      digitalWrite(in3, 0); digitalWrite(in4, 1);\n\n    } else if (msj == 184) { // Giro izquierda\n      digitalWrite(in1, 1); digitalWrite(in2, 0);\n      digitalWrite(in3, 0); digitalWrite(in4, 1);\n\n    } else if (msj == 185) { // Giro derecha\n      digitalWrite(in1, 0); digitalWrite(in2, 1);\n      digitalWrite(in3, 1); digitalWrite(in4, 0);\n\n    } else if (msj == 186) { // Alto total\n      digitalWrite(in1, 0); digitalWrite(in2, 0);\n      digitalWrite(in3, 0); digitalWrite(in4, 0);\n    }\n  }\n}\n\n// Conversi\u00f3n de \u00e1ngulo a se\u00f1al PWM\nvoid moverServo(int angulo) {\n  int duty = map(angulo, 0, 180, 13, 26);  // Ajusta si el servo no recorre bien\n  ledcWrite(SERVO_PIN, duty);\n}\n</code></pre>"},{"location":"PROYECTO/#4-resultados","title":"4) Resultados","text":"<p>El sistema respondi\u00f3 correctamente a los comandos enviados desde el dispositivo m\u00f3vil. El servo se movi\u00f3 en un rango de 0\u00b0 a 180\u00b0, permitiendo controlar la direcci\u00f3n del veh\u00edculo. Los motores DC reaccionaron adecuadamente a los comandos para avanzar, retroceder, girar y detenerse. El enlace Bluetooth se mantuvo estable durante toda la prueba, mostrando una comunicaci\u00f3n eficiente entre el ESP32 y el controlador remoto.</p> <p></p> <p>Al final realizar un dise\u00f1o del veh\u00edculo y de la pagna de control que permitiera una correcta conexi\u00f3n entre componentes y codigo</p> <p>Video armado</p>"},{"location":"PROYECTO/#5-conclusiones","title":"5) conclusiones","text":"<p>Se logr\u00f3 implementar exitosamente un sistema de control de veh\u00edculo robotizado utilizando un ESP32 y comunicaci\u00f3n Bluetooth. La pr\u00e1ctica permiti\u00f3 comprender c\u00f3mo se integran servomotores y motores DC dentro de un mismo sistema de control. El uso de comandos num\u00e9ricos simplific\u00f3 la comunicaci\u00f3n, garantizando una respuesta inmediata del veh\u00edculo ante cada orden. Este proyecto constituye la base para desarrollar futuros sistemas aut\u00f3nomos con sensores o control remoto avanzado.</p>"},{"location":"comandos/","title":"Encabezados","text":"<pre><code># T\u00edtulo H1\n## T\u00edtulo H2\n### T\u00edtulo H3\n</code></pre>"},{"location":"comandos/#titulo-h1","title":"T\u00edtulo H1","text":""},{"location":"comandos/#titulo-h2","title":"T\u00edtulo H2","text":""},{"location":"comandos/#titulo-h3","title":"T\u00edtulo H3","text":""},{"location":"comandos/#enfasis-y-codigo-en-linea","title":"\u00c9nfasis y c\u00f3digo en l\u00ednea","text":"<pre><code>**negritas**, *cursivas*, ~~tachado~~, `c\u00f3digo en l\u00ednea`\n</code></pre> <p>negritas, cursivas, ~~tachado~~, <code>c\u00f3digo en l\u00ednea</code></p>"},{"location":"comandos/#citas-blockquote","title":"Citas (blockquote)","text":"<pre><code>&gt; Esta es una cita destacada.\n&gt; Puede tener m\u00faltiples l\u00edneas.\n</code></pre> <p>Esta es una cita destacada. Puede tener m\u00faltiples l\u00edneas.</p>"},{"location":"comandos/#enlaces","title":"Enlaces","text":"<pre><code>[Enlace directo](https://www.iberopuebla.mx/)\n\n[Texto del enlace de referencia][doc-ref]\n\n[doc-ref]: https://www.iberopuebla.mx//docs \"T\u00edtulo opcional\"\n</code></pre> <p>Enlace directo</p> <p>Texto del enlace de referencia</p>"},{"location":"comandos/#listas-vinetas-numeradas-y-de-tareas","title":"Listas: vi\u00f1etas, numeradas y de tareas","text":"<pre><code>- Item A\n    * Subitem A.1\n    * Subitem A.2\n- Item B\n    - Subitem B.1\n    - Subitem B.2\n\n1.  Paso 1\n    1.  Paso 1.1\n    2.  Paso 1.2\n        1.  Paso 1.2.1\n        2.  Paso 1.2.2\n\n- [x] Hecho\n- [ ] Pendiente\n</code></pre> <ul> <li>Item A<ul> <li>Subitem A.1</li> <li>Subitem A.2</li> </ul> </li> <li>Item B<ul> <li>Subitem B.1</li> <li>Subitem B.2</li> </ul> </li> </ul> <ol> <li> <p>Paso 1</p> <ol> <li>Paso 1.1</li> <li>Paso 1.2<ol> <li>Paso 1.2.1</li> <li>Paso 1.2.2</li> </ol> </li> </ol> </li> <li> <p> Hecho</p> </li> <li> Pendiente</li> </ol>"},{"location":"comandos/#tablas","title":"Tablas","text":"<pre><code>| Componente | Cant. | Nota        |\n|-----------:|:-----:|-------------|\n| Sensor X   | 2     | I2C         |\n| MCU Y      | 1     | WiFi/BLE    |\n</code></pre> Componente Cant. Nota Sensor X 2 I2C MCU Y 1 WiFi/BLE"},{"location":"comandos/#imagenes","title":"Im\u00e1genes","text":"<pre><code>![Diagrama del sistema](recursos/imgs/ibero.jpeg)\n\n&lt;!-- Control de tama\u00f1o usando HTML (cuando se requiera) --&gt;\n&lt;img src=\"../recursos/imgs/ibero.jpeg\" alt=\"Diagrama del sistema\" width=\"420\"&gt;\n</code></pre>"},{"location":"comandos/#pdfs-enlace-y-embebido","title":"PDFs (enlace y embebido)","text":"<pre><code>[Descargar especificaci\u00f3n (PDF)](recursos/archivos/Calendario.pdf)\n\n&lt;!-- Embed (requiere navegador compatible) --&gt;\n&lt;object data=\"recursos/archivos/Calendario.pdf\" type=\"application/pdf\" width=\"100%\" height=\"600\"&gt;\n  &lt;p&gt;No se pudo mostrar el PDF. &lt;a href=\"../recursos/archivos/Calendario.pdf\"&gt;Descargar&lt;/a&gt;&lt;/p&gt;\n&lt;/object&gt;\n</code></pre> <p>Descargar especificaci\u00f3n (PDF)</p>"},{"location":"comandos/#admonitions-material","title":"Admonitions (Material)","text":"<pre><code>!!! note \"Nota\"\n    Esto es una nota informativa.\n\n!!! tip \"Sugerencia\"\n    Un consejo breve para el usuario.\n\n!!! warning \"Advertencia\"\n    Precauciones o riesgos a considerar.\n\n??? info \"M\u00e1s informaci\u00f3n (colapsable)\"\n    Contenido adicional que se puede expandir.\n</code></pre> <p>Nota</p> <p>Esto es una nota informativa.</p> <p>Sugerencia</p> <p>Un consejo breve para el usuario.</p> <p>Advertencia</p> <p>Precauciones o riesgos a considerar.</p> M\u00e1s informaci\u00f3n (colapsable) <p>Contenido adicional que se puede expandir.</p>"},{"location":"comandos/#codigo-con-resaltado","title":"C\u00f3digo con resaltado","text":"<p><pre><code>```python\ndef medir(canal: int) -&gt; dict:\n    # Simulaci\u00f3n de lectura\n    return {\"canal\": canal, \"valor\": 523, \"unidad\": \"mV\"}\n\nprint(medir(1))\n</code></pre> <pre><code>```python\ndef medir(canal: int) -&gt; dict:\n    # Simulaci\u00f3n de lectura\n    return {\"canal\": canal, \"valor\": 523, \"unidad\": \"mV\"}\n\nprint(medir(1))\n</code></pre></p>"},{"location":"comandos/#separador-horizontal","title":"Separador horizontal","text":"<pre><code>---\n</code></pre>"},{"location":"comandos/#listas-anidadas-con-codigo-y-notas","title":"Listas anidadas con c\u00f3digo y notas","text":"<pre><code>- **M\u00f3dulo A**\n  - Funci\u00f3n: `procesar()`\n  - Entrada:\n    - `signal` (float)\n    - `freq` (Hz)\n  - Salida:\n    - JSON con `valor`, `unidad`\n  - !!! note\n        Documenta rangos v\u00e1lidos y casos borde.\n</code></pre> <ul> <li>M\u00f3dulo A</li> <li>Funci\u00f3n: <code>procesar()</code></li> <li>Entrada:<ul> <li><code>signal</code> (float)</li> <li><code>freq</code> (Hz)</li> </ul> </li> <li>Salida:<ul> <li>JSON con <code>valor</code>, <code>unidad</code></li> </ul> </li> <li> <p>Note</p> <pre><code>Documenta rangos v\u00e1lidos y casos borde.\n</code></pre> </li> </ul>"},{"location":"comandos/#bloques-de-cita-con-codigo-pseudo-logs","title":"Bloques de cita con c\u00f3digo (pseudo-logs)","text":"<pre><code>&gt; **Log:**\n&gt; ```\n&gt; [12:00:00] Init OK\n&gt; [12:00:01] Conectando a I2C...\n&gt; [12:00:02] Lectura: 523 mV\n&gt; ```\n</code></pre> <p>Log: <pre><code>[12:00:00] Init OK\n[12:00:01] Conectando a I2C...\n[12:00:02] Lectura: 523 mV\n</code></pre></p>"},{"location":"gitcmds/","title":"\ud83d\ude80 Comandos b\u00e1sicos de Git (primeros pasos)","text":"<p>En este curso solo usaremos los comandos esenciales de Git para trabajar con repositorios.</p>"},{"location":"gitcmds/#1-clonar-un-repositorio","title":"1. Clonar un repositorio","text":"<p>Copia un proyecto de GitHub a tu computadora.</p> <pre><code>git clone https://github.com/usuario/repositorio.git\n</code></pre>"},{"location":"gitcmds/#2-verificar-cambios","title":"2. Verificar cambios","text":"<p>Muestra qu\u00e9 archivos has modificado o agregado.</p> <pre><code>git status\n</code></pre>"},{"location":"gitcmds/#3-preparar-cambios","title":"3. Preparar cambios","text":"<p>Agrega archivos para guardarlos en el pr\u00f3ximo commit.</p> <pre><code>git add archivo.txt\ngit add .   # agrega todos los archivos modificados\n</code></pre>"},{"location":"gitcmds/#4-guardar-cambios-commit","title":"4. Guardar cambios (commit)","text":"<p>Guarda tus cambios con un mensaje descriptivo.</p> <pre><code>git commit -m \"Descripci\u00f3n breve de los cambios\"\n</code></pre>"},{"location":"gitcmds/#5-subir-cambios-al-repositorio-push","title":"5. Subir cambios al repositorio (push)","text":"<p>Env\u00eda tus commits locales al repositorio en GitHub.</p> <pre><code>git push origin main\n</code></pre>"},{"location":"gitcmds/#6-traer-cambios-del-remoto-pull","title":"6. Traer cambios del remoto (pull)","text":"<p>Actualiza tu proyecto con los \u00faltimos cambios de GitHub.</p> <pre><code>git pull origin main\n</code></pre>"},{"location":"gitcmds/#flujo-tipico-de-trabajo","title":"Flujo t\u00edpico de trabajo","text":"<ol> <li> <p>Traer cambios del remoto <pre><code>git pull origin main\n</code></pre></p> </li> <li> <p>Editar tus archivos de proyecto.</p> </li> <li> <p>Preparar los cambios <pre><code>git add .\n</code></pre></p> </li> <li> <p>Guardar los cambios <pre><code>git commit -m \"Mensaje descriptivo\"\n</code></pre></p> </li> <li> <p>Enviar los cambios al remoto <pre><code>git push origin main\n</code></pre></p> </li> </ol> <p>Consejo</p> <p>Piensa en este ciclo como un loop infinito: cada vez que quieras contribuir \u2192 primero <code>pull</code>, despu\u00e9s <code>add</code> + <code>commit</code>, y finalmente <code>push</code>.</p>"}]}